#define _USE_MATH_DEFINES
#include <bits/stdc++.h>

using namespace std;
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

void fileIO(void) {
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
#ifdef ONLINE_JUDGE
    //    freopen("walls.in", "r", stdin);
#endif
}

void fastIO(void) {
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
}

#define endl '\n'
typedef long long ll;
#define int ll
typedef long double ld;

#define all(a)   a.begin(),a.end()
#define all_r(a)   a.rbegin(),a.rend()
#define flsh cout.flush()

#define N (ll)(2e5 + 5)
#define MOD (ll)(1e9 + 7)
const long long oo = 1e18;
const ld EPS = 1e-8;
const int mod = 1e9 + 7;

vector<int> dist;
vector<vector<int>> adj;

bool dfs(int u, int p, int d){
    if(adj[u].size() == 1 && u != 1){
        return d < dist[u];
    }

    for(auto v : adj[u]){
        if(p == v) continue;
        if(dfs(v, u, d + 1)) return 1;
    }

    return 0;
}

void solve(){
    int n, k; cin >> n >> k;
    adj.assign(n + 1, {});
    dist.assign(n + 1, oo);

    queue<int> q;
    for (int i = 0; i < k; ++i) {
        int x; cin >> x;
        q.push(x);
        dist[x] = 0;
    }

    for (int i = 0; i < n - 1; ++i) {
        int u, v; cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    while (q.size()){
        int p = q.front();
        q.pop();

        for(auto v: adj[p]){
            if(dist[v] == oo){
                q.push(v);
                dist[v] = dist[p] + 1;
            }
        }
    }

    cout << (dfs(1, 1, 0) ? "YES" : "NO") << endl;
}

signed main() {
    fastIO(); fileIO();
    cout << fixed << setprecision(9);
    int test = 1, t = 1; cin>>test;
    while (test--) {
//        cout << "Case #" << t << ": ";
        solve();
        t++;
    }
}
#include <bits/stdc++.h>

using namespace std;
#define int long long


//////////////////////////////////////////////////////////////////////////////


vector <vector<int>> adj;
vector <int> color;
int n ,m;

bool bfs(int u) {
    queue <int> q;
    color[u] = 1;
    q.push(u);
    while (!q.empty()) {
        int x = q.front();
        q.pop();

        for (int v : adj[x]) {
            if(color[v] == 0) {
                color[v] = 3 - color[x];
                q.push(v);
            }
            else {
                if(color[v] == color[x]) return false;
            }
        }
    }
    return true;
}

void AC() {
    cin >> n;
    adj.assign(n + 1 , vector <int> ());
    color.assign(n + 1 , 0);

    for (int i = 0; i < n; ++i) {
        int u , v; cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    bool can = true;
    for (auto vec : adj) {
        if(vec.size() > 2) can = false;
    }
    if(!can) {
        cout << "NO\n";
        return;
    }
    for (int i = 1; i <= n; ++i) {
        if(!color[i])
            can &= bfs(i);
    }

    if(can) cout << "YES\n";
    else cout << "NO\n";
}


signed main() {
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);

    int t = 1;
    cin >> t;
    while (t--) {
        AC();
    }
}

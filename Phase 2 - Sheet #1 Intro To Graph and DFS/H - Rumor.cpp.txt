#include <iostream>
#include <vector>
#include <limits.h>

using namespace std;

#define endl '\n'
#define int long long

void Tatakea() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
}

vector<vector<int>> adj;
vector<int> vis;
vector<int> characters;

int DFS(int u) {
    vis[u] = 1;
    int mn = characters[u];

    for (auto v : adj[u]) {
        if (!vis[v]) {
            mn = min(mn, DFS(v));
        }
    }

    return mn;
}

signed main() {
    Tatakea();

    int n, m; cin >> n >> m;

    adj.assign(n + 1, {});
    vis.assign(n + 1, 0);
    characters.assign(n + 1, 0);

    for (int i = 1; i <= n; i++) {
        cin >> characters[i];
    }

    for (int i = 0; i < m; i++) {
        int a, b; cin >> a >> b;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }

    int ans = 0;
    for (int i = 1; i <= n; i++) {
        if (!vis[i]) {
            ans += DFS(i);
        }
    }

    cout << ans << endl;

    return 0;
}
